.img-box{
    width: 400px;
    height: 250px;
    background-color: #7fecb9;
}

.img-box img{
    width: 100%;
    height: 100%;
    cursor: pointer;
    border: 1px solid gold;
}

.img-box img:hover{
    /* transform */
    /* 1. skew: 기울이기 함수
    - skew(x_deg, y_deg), skewX(x_deg), skewY(y_deg)
    */

    transform: skewX(30deg);
    transform: skewY(30deg);
    transform: skew(30deg, 30deg);

    /* 2. scale : 크기조절 함수
    - scale(숫자,숫자), scaleX(배수), scaleY(배수)
    */

    transform: scaleX(0.7);
    transform: scaleY(2);
    transform: scale(1.5, 0.8);
    transform: scale(1.5);

    /* 3. translate: 이동 함수 (음수 양수 다 올 수있음)*/
    transform: translateX(-100PX);
    transform: translateY(100PX);
    transform: translate(100px, 50px);

    /* 4. rotate: 회전함수 (반시계 방향은 음수)*/
    transform: rotate(-45deg);
    transform: perspective(200px) rotateX(45deg);
    /* transform: perspective(2000px) rotateX(45deg); */
    transform: perspective(400px) rotateY(180deg);

    backface-visibility: visible;
    backface-visibility: hidden;
    
    transform: translateX(50px);
    transform: scale(1.2);
    /* 단축 속성 */
    /* transform: perspective() translate() scale() rotate() skew(); */
    transform: translateX(100px) scale(1.2);
}

.box{
    width: 100px;
    height: 100px;
    display: inline-block;
    background-color: black;
}

.box1:hover{
    background-color: pink;
    width: 120px;
    height: 120px;

    transition-duration: 1s;
    transition-timing-function: ease;
    transition-delay: 2s;
    /* 해당 속성만 적용하고 싶을 때 */
    transition-property: background-color;
}

.box2:hover{
    background-color: aqua;
    transform: translateX(100px) scaleX(2);

    /* transition: property duration timing-fuctino delay; */
    transition: transform 1s ease-in-out 2s;
}

.box3{
    transition: .6s;
}

.box3:hover{
    /* opacity: 0; */
    
    /* visibility는 자연스럽게 전환이 안 걸림(사이 값이 없는 것은 전환이 안 걸림) */
    /* visibility, display 같은 속성값들이
    중간 값들을 가지지 않는 경우는 transition이 적용되지 않음 */
    visibility: hidden; 
}

/* 가운데 정렬 방법 3가지 */
.outer{
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}

.outer .inner{
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* 1. flex : 가장 추천하는 가운데 정렬 방식 */
.outer1{
    display: flex;
    justify-content: center;
    align-items: center;
}

.outer1 > .inner1{}

/* 2. position transform : flex속성끼리 부딪혀 어쩔수 없을 때 position사용*/
/* 주의: absolute는 문서의 흐름을 해치기 때문에 팀 사용시 신중! */
.outer2{
    position: relative;
}

.outer2 > .inner2{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* 3. position, margin:auto */
.outer3{
    position: relative;
}

.outer3 > .inner3{
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}